# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities

class GetDNSRecordResult(object):
    """
    A collection of values returned by getDNSRecord.
    """
    def __init__(__self__, data=None, flags=None, port=None, priority=None, tag=None, ttl=None, type=None, weight=None, id=None):
        if data and not isinstance(data, basestring):
            raise TypeError('Expected argument data to be a basestring')
        __self__.data = data
        if flags and not isinstance(flags, int):
            raise TypeError('Expected argument flags to be a int')
        __self__.flags = flags
        if port and not isinstance(port, int):
            raise TypeError('Expected argument port to be a int')
        __self__.port = port
        if priority and not isinstance(priority, int):
            raise TypeError('Expected argument priority to be a int')
        __self__.priority = priority
        if tag and not isinstance(tag, basestring):
            raise TypeError('Expected argument tag to be a basestring')
        __self__.tag = tag
        if ttl and not isinstance(ttl, int):
            raise TypeError('Expected argument ttl to be a int')
        __self__.ttl = ttl
        if type and not isinstance(type, basestring):
            raise TypeError('Expected argument type to be a basestring')
        __self__.type = type
        if weight and not isinstance(weight, int):
            raise TypeError('Expected argument weight to be a int')
        __self__.weight = weight
        if id and not isinstance(id, basestring):
            raise TypeError('Expected argument id to be a basestring')
        __self__.id = id
        """
        id is the provider-assigned unique ID for this managed resource.
        """

def get_dns_record(domain=None, name=None):
    """
    Get information on a DNS record. This data source provides the name, TTL, and zone
    file as configured on your Digital Ocean account. This is useful if the record
    in question is not managed by Terraform.
    
    An error is triggered if the provided domain name or record are not managed with
    your Digital Ocean account.
    """
    __args__ = dict()

    __args__['domain'] = domain
    __args__['name'] = name
    __ret__ = pulumi.runtime.invoke('do:core/getDNSRecord:getDNSRecord', __args__)

    return GetDNSRecordResult(
        data=__ret__.get('data'),
        flags=__ret__.get('flags'),
        port=__ret__.get('port'),
        priority=__ret__.get('priority'),
        tag=__ret__.get('tag'),
        ttl=__ret__.get('ttl'),
        type=__ret__.get('type'),
        weight=__ret__.get('weight'),
        id=__ret__.get('id'))
