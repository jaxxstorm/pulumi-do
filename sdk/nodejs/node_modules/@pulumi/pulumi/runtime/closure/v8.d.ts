/**
 * Given a function and a free variable name, lookupCapturedVariableValue looks up the value of that free variable
 * in the scope chain of the provided function. If the free variable is not found, `throwOnFailure` indicates
 * whether or not this function should throw or return `undefined.
 *
 * @param func The function whose scope chain is to be analyzed
 * @param freeVariable The name of the free variable to inspect
 * @param throwOnFailure If true, throws if the free variable can't be found.
 * @returns The value of the free variable. If `throwOnFailure` is false, returns `undefined` if not found.
 */
export declare function lookupCapturedVariableValue(func: Function, freeVariable: string, throwOnFailure: boolean): any;
/**
 * Given a function, returns the name of the file where this function was defined.
 * Returns the empty string if the given function has no Script. (e.g. a native function)
 */
export declare function getFunctionFile(func: Function): string;
/**
 * Given a function, returns the line and column number in the file where this function was defined.
 * Returns { 0, 0 } if the location cannot be found or if the given function has no Script.
 */
export declare function getFunctionLocation(func: Function): {
    line: number;
    column: number;
};
